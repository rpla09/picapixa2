<?php

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_form_alter().
 */
function health_episode_form_alter(&$form, FormStateInterface $form_state, $form_id) {

  // Solo aplicamos al formulario del tipo "health_episode".
  if ($form_id == 'node_health_episode_form' || $form_id == "node_health_episode_edit_form") {

    $form['#validate'][] = 'health_episode_custom_validate';

    // 🔹 Definición de variables antes de usarlas.
    $episode_type = 'field_episode_type';
    $infection_status = 'field_infection_status';
    $antibiotic_fields = [
      'field_antibiotic_name',
      'field_antibiotic_dose',
      'field_antibiotic_frequency',
    ];
    $fever_temp = 'field_fever_max_temp';
    $followup_fields = ['field_follow_up_phase'];
    $wound_fields = [
      'field_wound_location',
      'field_wound_location_other',
      'field_wound_stage',
      'field_wound_size',
    ];
    $other_type_field = 'field_episode_type_other';

    // Si no existe el campo de tipo de episodio, no hacemos nada.
    if (!isset($form[$episode_type])) {
      return;
    }

    /* --------------------------
     * BLOQUE DE INFECCIÓN
     * -------------------------- */
    if (isset($form[$infection_status])) {
      $form[$infection_status]['#states'] = [
        'visible' => [
          ':input[name="' . $episode_type . '"]' => ['value' => 'infection'],
        ],
      ];
    }

    //if (isset($form['group_infection'])) {
      $form['group_infection']['#states'] = [
        'visible' => [
          ':input[name="' . $episode_type . '"]' => ['value' => 'infection'],
        ],
      ];
    //}

    foreach ($antibiotic_fields as $field) {
      if (isset($form[$field])) {
        $form[$field]['#states'] = [
          'visible' => [
            ':input[name="' . $episode_type . '"]' => [
              ['value' => 'infection'],
              ['value' => 'medication'],
            ],
          ],
        ];
      }
    }

    //if (isset($form['group_medication'])) {
      $form['group_medication']['#states'] = [
        'visible' => [
          ':input[name="' . $episode_type . '"]' => [
            ['value' => 'infection'],
            ['value' => 'medication'],
          ],
        ],
      ];
    //}

    /* --------------------------
     * BLOQUE DE FIEBRE
     * -------------------------- */
    if (isset($form[$fever_temp])) {
      $form[$fever_temp]['#states'] = [
        'visible' => [
          ':input[name="' . $episode_type . '"]' => [
            ['value' => 'infection'],
            ['value' => 'fever'],
          ],
        ],
      ];
    }

    //if (isset($form['group_fever'])) {
      $form['group_fever']['#states'] = [
        'visible' => [
          ':input[name="' . $episode_type . '"]' => [
            ['value' => 'infection'],
            ['value' => 'fever'],
          ],
        ],
      ];
    //}

    /* --------------------------
     * BLOQUE DE SEGUIMIENTO
     * -------------------------- */
    foreach ($followup_fields as $field) {
      if (isset($form[$field])) {
        $form[$field]['#states'] = [
          'visible' => [
            ':input[name="' . $episode_type . '"]' => ['value' => 'follow_up'],
          ],
        ];
      }
    }

    /* --------------------------
     * BLOQUE DE HERIDAS
     * -------------------------- */
    foreach ($wound_fields as $field) {
      if (isset($form[$field])) {
        $form[$field]['#states'] = [
          'visible' => [
            ':input[name="' . $episode_type . '"]' => ['value' => 'wound'],
          ],
        ];
      }
    }

    if (isset($form['field_wound_location_other'])) {
      $form['field_wound_location_other']['#states'] = [
        'visible' => [
          [
            ':input[name="' . $episode_type . '"]' => ['value' => 'wound'],
            ':input[name="field_wound_location"]' => ['value' => 'other'],
          ],
        ],
      ];
    }

    //if (isset($form['group_wound_care'])) {
      $form['group_wound_care']['#states'] = [
        'visible' => [
          ':input[name="' . $episode_type . '"]' => ['value' => 'wound'],
        ],
      ];
    //}

    /* --------------------------
     * BLOQUE “OTHER”
     * -------------------------- */
    if (isset($form[$other_type_field])) {
      $form[$other_type_field]['#states'] = [
        'visible' => [
          ':input[name="' . $episode_type . '"]' => ['value' => 'other'],
        ],
      ];
    }

    /* --------------------------
     * BLOQUE “EPISODE END”
     * -------------------------- */
    if (isset($form['field_end_datetime'])) {
      //$form['field_end_datetime']['widget'][0]['#required'] = FALSE;
      $form['field_end_datetime']['#states'] = [
        'invisible' => [
          [':input[name="field_single_event[value]"]' => ['checked' => TRUE]],
          [
            ':input[name="field_episode_status"]' => ['!value' => 'resolved'],
            ':input[name="field_single_event[value]"]' => ['checked' => FALSE],
          ],
        ],
      ];
    }

    /* --------------------------
     * BLOQUE “SINGLE EVENT”
     * -------------------------- */
    if (isset($form['field_episode_status'])) {
      $form['field_episode_status']['#states'] = [
        'visible' => [
          ':input[name="field_single_event[value]"]' => ['checked' => FALSE],
        ],
      ];
    }

    /* --------------------------
     * BLOQUE RELACIÓN ENTRE EPISODIOS
     * -------------------------- */
    if (isset($form['field_related_health_episode']) && isset($form['field_relationship_type'])) {
      $form['field_relationship_type']['#states'] = [
        'visible' => [
          ':input[name="field_related_health_episode[target_id]"]' => ['filled' => TRUE],
        ],
      ];
    }
  }
}

function health_episode_custom_validate($form, FormStateInterface $form_state) {
  $status = $form_state->getValue('field_episode_status')[0]['value'] ?? NULL;

  // Soporte para boolean field con o sin índice [0].
  $single_event_value = $form_state->getValue('field_single_event');
  if (is_array($single_event_value)) {
    if (isset($single_event_value['value'])) {
      $single_event = $single_event_value['value'];
    }
    elseif (isset($single_event_value[0]['value'])) {
      $single_event = $single_event_value[0]['value'];
    }
    else {
      $single_event = 0;
    }
  } else {
    $single_event = $single_event_value;
  }

  // Convertimos a boolean.
  $single_event = (bool) ((int) $single_event);

  $end_date = $form_state->getValue('field_end_datetime')[0]['value'] ?? NULL;

  // Validación médica.
  if ($status === 'resolved' && !$single_event && empty($end_date)) {
    $form_state->setErrorByName(
      'field_end_datetime',
      t('Please enter an end date when the episode is resolved and not a single event.')
    );
  }
}
